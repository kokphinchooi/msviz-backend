# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                      ch.isbsib.proteomics.mzviz.controllers.UtilsController.hello

GET           /api-docs/exp                                          controllers.ApiHelpController.getResource(path = "/exp")
GET           /setup-mysql                                           ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.setupMySqlTables
GET           /exp                                                   ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.stats
GET           /exp/xic/:runId/:moz                                   ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.findXicMySql(runId,moz:Double,tolerance:Option[Double], rtTolerance:Option[Double])
POST          /exp/ms1/:runId                                        ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.loadMS1MySql(runId)
GET           /exp/msruns                                            ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.listMSRunIds
POST          /exp/msrun/:runId                                      ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.loadMSRun(runId)
DELETE        /exp/msrun/:runId                                      ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.deleteMSRun(runId)
GET           /exp/spectrum/:runId/:id                               ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.findExpSpectrum(runId:String, id:String, sortByMoz:Option[Boolean], mostIntense:Option[Integer])
GET           /exp/spectra-ref/:runId                                ch.isbsib.proteomics.mzviz.controllers.experimental.ExperimentalController.findAllSpectraRefByRunId(runId)

GET           /api-docs/sequences                                    controllers.ApiHelpController.getResource(path = "/sequences")
GET           /sequences/list-sources                                ch.isbsib.proteomics.mzviz.controllers.theoretical.SequenceController.listSources
POST          /sequences/:sourceId/fasta                             ch.isbsib.proteomics.mzviz.controllers.theoretical.SequenceController.loadFasta(sourceId)
DELETE        /sequences/:sourceId                                   ch.isbsib.proteomics.mzviz.controllers.theoretical.SequenceController.deleteSource(sourceId)
GET           /sequences/stats                                       ch.isbsib.proteomics.mzviz.controllers.theoretical.SequenceController.stats

GET           /api-docs/sequence                                     controllers.ApiHelpController.getResource(path = "/sequence")
GET           /sequence/:sourceId/:identifier                        ch.isbsib.proteomics.mzviz.controllers.theoretical.OneSequenceController.get(sourceId, identifier)

GET           /api-docs/match                                        controllers.ApiHelpController.getResource(path = "/match")
GET           /match/psms/:searchId                                  ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findAllPSMBySearchId(searchId, addSpectrumRef:Option[Boolean])
GET           /match/proteins/:searchIds                             ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findAllProteinRefsBySearchIds(searchIds, withModif:Option[String])
GET           /match/protein-matches/:searchIds                      ch.isbsib.proteomics.mzviz.controllers.matches.ProteinMatchController.findAllProteinsBySearchIds(searchIds)
GET           /match/modifications/:searchIds                        ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findAllModificationsBySearchIds(searchIds)
GET           /match/psms/:searchIds/by-ac/:accessionCode            ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findAllPSMByProteinAC(searchIds, accessionCode, sequenceSource:Option[String])
GET           /match/psms/:searchId/by-spectrum/:spectrumId          ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findAllBySearchIdAndSpectrumId(searchId, spectrumId)
GET           /match/sim/:runId/:title/:scoreThresh/:matchTol        ch.isbsib.proteomics.mzviz.controllers.matches.PSMController.findSimilarSpectra(runId, title, scoreThresh, matchTol)

GET           /api-docs/search                                       controllers.ApiHelpController.getResource(path = "/search")
GET           /search/:searchId                                      ch.isbsib.proteomics.mzviz.controllers.matches.SearchController.get(searchId)
GET           /search                                                ch.isbsib.proteomics.mzviz.controllers.matches.SearchController.list
POST          /search/:searchId                                      ch.isbsib.proteomics.mzviz.controllers.matches.SearchController.loadMzId(searchId:String, runId:Option[String])
DELETE        /search/:searchIds                                     ch.isbsib.proteomics.mzviz.controllers.matches.SearchController.delete(searchIds)

GET           /compare/:searchIds                                    ch.isbsib.proteomics.mzviz.controllers.matches.ProteinMatchMultipleSearchesController.findAllProteinsForMultipleSearchIds(searchIds, withModif:Option[String])

PUT           /basket                                                ch.isbsib.proteomics.mzviz.controllers.results.BasketController.put
OPTIONS       /basket                                                ch.isbsib.proteomics.mzviz.controllers.results.BasketController.options

POST          /qc/summary                                            ch.isbsib.proteomics.mzviz.controllers.qc.QcController.loadQcSummary()
GET           /qc/summary                                            ch.isbsib.proteomics.mzviz.controllers.qc.QcController.listAll
GET           /qc/summary/:qcDate                                    ch.isbsib.proteomics.mzviz.controllers.qc.QcController.findQcSummaryEntryByDate(qcDate)
GET           /qc/summary/:qcDate1/:qcDate2                          ch.isbsib.proteomics.mzviz.controllers.qc.QcController.findQcSummaryBtw2Date(qcDate1,qcDate2)

GET           /docs/*file                                            controllers.Assets.at(path="/public/docs", file)
GET           /api-docs                                              controllers.ApiHelpController.getResources